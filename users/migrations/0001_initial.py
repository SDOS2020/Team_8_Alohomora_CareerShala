# Generated by Django 3.1.3 on 2021-02-23 18:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.methods
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('questionnaire', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('identifier', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(error_messages={'unique': 'A user with this email already exists.'}, max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='phone number')),
                ('date_of_birth', models.DateField(verbose_name='date of birth')),
                ('is_expert', models.BooleanField(default=False, verbose_name='is expert')),
                ('email_verification_token', models.CharField(default=users.methods.generate_token, max_length=32)),
                ('verified', models.BooleanField(default=False, verbose_name='Email Verified?')),
                ('profile_completed', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interests', models.ManyToManyField(blank=True, to='users.Interest')),
                ('next_questionnaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pending_student', to='questionnaire.questionnaire')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpertProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('associated_institute', models.CharField(blank=True, max_length=200, null=True)),
                ('specialisations', models.ManyToManyField(to='users.Specialisation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
